status=info
dest=err
name=AppLogconfig

property.applicationName=AuditTestShell
property.logFileDir=log
property.csvFileDir=csv
#
# Name of default log folders
# issue #32: https://github.com/buda-base/asset-manager/issues/32
# Windows users can use:
# property.logRoot=${sys:user.home}/Documents/audit-test-logs
property.logRoot=${sys:user.home}/audit-test-logs

# Unglaubische dummheit https://stackoverflow.com/questions/40565881/log4j2-logs-into-user-home-folder
# Expected it to be ${user.home}, but no, has to be ${sys:user.home}

property.filename=rollingtest.log
property.SUM=SUMMARY
property.DET=DETAIL
property.TestInt=TestInternal
#
# Must match value in shell.java
property.testResultLoggerName=testResultLogger

property.logPrefix=${logRoot}/${logFileDir}/${applicationName}
property.csvPrefix=${logRoot}/${csvFileDir}/${applicationName}

# testLogger is for internal debugging. See appender.testInternals
# To toggle from null to real file
loggers=shellLogger, summaryLogger, detailLogger, testResultLogger, testLogger

# add testInternals appender to debug tests
appenders=shell, summary, detail, csvSummary, csvDetail, testInternals

rootLogger.level=info
# Keep detached appenders off the screen
rootLogger.appenderRefs=rootShell,rootSummary
#
# Sends all unclassified messages to summary log and console
rootLogger.appenderRef.rootShell.ref=console
rootLogger.appenderRef.rootSummary.ref=summary

logger.shellLogger.name=sys
logger.shellLogger.level=info

# The shell writes into the console and summary, and detail logs
logger.shellLogger.appenderRef.shell.ref=console
logger.shellLogger.appenderRef.summary.ref=summary
logger.shellLogger.appenderRef.detail.ref=detail
logger.shellLogger.appenderRef.csvSummary.ref=CSVSUMMARY
logger.shellLogger.additivity=false

# Summary logger writes only to summary appender
logger.summaryLogger.name=summaryLogger
logger.summaryLogger.level=info
logger.summaryLogger.refs=summary,csvSummary
#
# I think this writes test specific messages to summary, and not detail
# logger.summaryLogger.appenderRef.shell.ref=summary


# false keeps detailLogger off the console?
# yes
logger.summaryLogger.additivity=false

#
# Specific class loggers
# This traces resolution of shell properties
logger.propManager.name=io.bdrc.am.audit.iaudit.FilePropertyManager
logger.propManager.level=debug
logger.propManager.appenderRef.summary.ref=summary
# logger.propManager.additivity=true

# Application decides when to write to detail logger
logger.detailLogger.name=detailLogger
logger.detailLogger.level=info
logger.detailLogger.appenderRefs=detail,csvDetail
logger.detailLogger.appenderRef.detail.ref=detail
logger.detailLogger.appenderRef.csvDetail.ref=CSVDETAIL
#
# Set this to true to write details to root logger
logger.detailLogger.additivity=false

#
# This is the namespace for audit tests.
# The shell constructs this logger with the call
#        Logger testLogger = LoggerFactory.getLogger(testClass);
# where testClass is a Class<?> fetched from the audit test library
#
logger.testLogger.name=io.bdrc.am.audit.audittests
logger.testLogger.level=trace
logger.testLogger.additivity=false
logger.testLogger.appenders=testInternals
# To expose testInternals to console, uncomment these
# logger.testLogger.appenders=console,testInternals
# logger.testLogger.appenderRef.shell.ref=console
logger.testLogger.appenderRef.testInternals.ref=testInternalsName

# ---------------------      Test Internals logging  ---------------

appender.testInternals.name=testInternalsName
#
# To activate internal test logging, uncomment this line, and comment out
# the remaining testInternals lines
appender.testInternals.type=Null
# To activate internal test logging, comment the previous line, and uncomment the next stanza
# appender.testInternals.type=File
# appender.testInternals.append=false
# appender.testInternals.fileName=${logPrefix}-${TestInt}-${date:yyyy-MM-dd-HH-mm-ss}.log
# appender.testInternals.layoutString.type = PatternLayout
# appender.testInternals.layoutString.pattern=%d{yyyy-MM-dd HH.mm.ss}   %-5p %m   :%C:%n
#
# --------------------- end  Test Internals logging ----------------

# ---------------------      Per test result section  --------------
#
# Properties
# Default test result location. Overridden by -l option of audittool
property.DefaultTestAppenderLocation=${logRoot}
#
# used by AuditTestLogController.java to define its template
# property.AppenderTemplateName=eachTestResultTemplate
#
logger.testResultLogger.name=${testResultLoggerName}
logger.testResultLogger.level=info
logger.testResultLogger.additivity=false

#---------------------      End Per test Result section  -------------
appender.shell.type=Console
appender.shell.name=console
appender.shell.layoutString.type=PatternLayout
appender.shell.layoutString.pattern=%-5p %m%n

appender.summary.type=File
appender.summary.name=summary
appender.summary.append=false
appender.summary.fileName=${logPrefix}-${SUM}-${date:yyyy-MM-dd-HH-mm-ss}.log
appender.summary.layoutString.type = PatternLayout
appender.summary.layoutString.pattern=%d{yyyy-MM-dd HH.mm.ss} %-5p %m%n

appender.detail.type=File
appender.detail.name=detail
appender.detail.append=false
appender.detail.fileName=${logPrefix}-${DET}-${date:yyyy-MM-dd-HH-mm-ss}.log
appender.detail.layoutString.type = PatternLayout
appender.detail.layoutString.pattern=%d{yyyy-MM-dd HH.mm.ss} %-5p %m%n

appender.csvSummary.type = File
appender.csvSummary.name = CSVSUMMARY
appender.csvSummary.append=false
appender.csvSummary.fileName = ${csvPrefix}-${SUM}-${date:yyyy-MM-dd-HH-mm-ss}.csv
appender.csvSummary.layoutString.type = CsvParameterLayout
appender.csvSummary.layoutString.delimiter = ,
appender.csvSummary.layoutString.header = outcome,path,test_name\n

appender.csvDetail.type = File
appender.csvDetail.name = CSVDETAIL
appender.csvDetail.append=false
appender.csvDetail.fileName = ${csvPrefix}-${DET}-${date:yyyy-MM-dd-HH-mm-ss}.csv
appender.csvDetail.layoutString.type = CsvParameterLayout
appender.csvDetail.layoutString.delimiter = ,
appender.csvDetail.layoutString.header = error_number,error_test,path\n

